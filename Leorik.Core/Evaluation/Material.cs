using System.Runtime.CompilerServices;

namespace Leorik.Core
{
    public struct Material
    {
        public short Base;
        public short Endgame;

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void AddScore(int pieceIndex, int squareIndex)
        {
            int tableIndex = (pieceIndex << 6) | squareIndex;
            Base += MidgameTables[tableIndex];
            Endgame += EndgameTables[tableIndex];
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void SubtractScore(int pieceIndex, int squareIndex)
        {
            int tableIndex = (pieceIndex << 6) | squareIndex;
            Base -= MidgameTables[tableIndex];
            Endgame -= EndgameTables[tableIndex];
        }

        public static readonly short[] MidgameTables = new short[6 * 64]{
          100,  100,  100,  100,  100,  100,  100,  100,
          147,  195,  128,  162,  150,  185,  117,   68,
           71,   75,  107,  108,  145,  150,  104,   73,
           57,   78,   79,   96,   98,   91,   91,   64,
           45,   56,   65,   80,   86,   79,   79,   56,
           41,   48,   59,   50,   63,   69,   91,   63,
           34,   53,   49,   47,   52,   96,   96,   58,
          100,  100,  100,  100,  100,  100,  100,  100,

          149,  242,  258,  265,  303,  233,  267,  196,
          243,  264,  382,  333,  325,  367,  297,  287,
          275,  375,  359,  386,  408,  421,  392,  342,
          303,  341,  341,  379,  363,  395,  344,  338,
          309,  322,  338,  336,  350,  345,  339,  314,
          300,  313,  336,  333,  342,  342,  348,  307,
          287,  258,  311,  319,  321,  337,  298,  311,
          227,  302,  258,  281,  302,  294,  305,  276,

          295,  313,  263,  260,  294,  278,  302,  296,
          317,  362,  335,  314,  361,  372,  357,  305,
          338,  376,  388,  389,  377,  396,  383,  352,
          347,  362,  374,  404,  392,  389,  364,  350,
          342,  371,  368,  377,  389,  367,  360,  348,
          350,  366,  367,  369,  367,  382,  371,  359,
          346,  368,  367,  355,  364,  370,  386,  350,
          301,  344,  341,  331,  338,  343,  301,  320,

          484,  507,  475,  521,  516,  488,  487,  486,
          484,  485,  513,  521,  534,  542,  491,  509,
          445,  468,  481,  484,  472,  506,  518,  476,
          421,  435,  454,  480,  473,  485,  459,  445,
          403,  416,  434,  440,  448,  444,  469,  428,
          396,  421,  430,  425,  447,  447,  454,  421,
          393,  428,  421,  433,  444,  453,  443,  379,
          420,  428,  443,  451,  455,  440,  419,  424,

          861,  896,  922,  902,  952,  941,  920,  928,
          894,  870,  905,  918,  911,  959,  929,  951,
          902,  902,  923,  923,  947,  975,  961,  971,
          879,  886,  901,  900,  913,  932,  915,  914,
          904,  885,  904,  901,  908,  913,  917,  913,
          892,  917,  901,  909,  907,  914,  928,  914,
          876,  900,  925,  913,  920,  927,  909,  910,
          906,  892,  902,  923,  894,  886,  888,  864,

          -42,    0,   -2,   -6,  -14,   -7,    8,   -3,
            4,   23,   15,   30,   12,   13,    4,  -10,
           12,   28,   35,    8,   17,   42,   51,   -5,
           -1,    5,   11,   -3,  -11,  -11,    1,  -41,
          -25,   14,  -14,  -64,  -66,  -37,  -45,  -63,
           -4,   17,   -7,  -36,  -46,  -35,    2,  -15,
           20,   36,    3,  -56,  -33,   -2,   40,   48,
           12,   71,   40,  -46,   26,  -14,   60,   55,
    };

        public static short[] EndgameTables = new short[6 * 64]{
    0,    0,    0,    0,    0,    0,    0,    0,
   28,  -22,   48,    0,   14,  -42,   43,  108,
   59,   62,   17,    4,  -51,  -59,    7,   38,
   24,   -2,   -4,  -29,  -30,  -23,  -22,    3,
   21,   10,    0,  -15,  -19,  -18,  -23,   -2,
   18,   14,    6,   28,   13,   -3,  -46,  -14,
   39,   13,   37,   41,   38,  -26,  -45,   -5,
    0,    0,    0,    0,    0,    0,    0,    0,

   66,  -12,    4,  -22,  -47,    7,  -41,  -14,
    5,    2, -137,  -60,  -59, -121,  -46,  -58,
  -30, -124,  -79, -110, -148, -157, -142, -107,
  -47,  -70,  -50,  -94,  -74, -119,  -68,  -84,
  -54,  -55,  -51,  -42,  -65,  -60,  -63,  -59,
  -53,  -45,  -69,  -48,  -63,  -73,  -98,  -60,
  -49,    0,  -50,  -53,  -54,  -83,  -45,  -86,
   12,  -90,   -4,  -22,  -52,  -41,  -90,  -51,

   -9,  -35,   21,   33,   -4,   13,  -16,  -19,
  -31,  -78,  -41,  -29,  -73,  -89,  -70,  -21,
  -50,  -95, -104, -106,  -92, -109,  -99,  -63,
  -64,  -68,  -80, -113,  -95,  -97,  -79,  -65,
  -60,  -85,  -67,  -71,  -99,  -73,  -80,  -64,
  -71,  -79,  -71,  -73,  -68,  -97,  -90,  -85,
  -67, -101,  -87,  -69,  -76,  -94, -119,  -88,
  -25,  -60,  -79,  -48,  -60,  -76,  -12,  -40,

   32,    3,   49,   -8,   -1,   24,   22,   26,
   27,   30,   -3,  -13,  -42,  -46,   18,   -6,
   69,   46,   29,   26,   35,  -10,  -24,   22,
   96,   79,   65,   27,   34,   20,   40,   64,
  115,  104,   85,   76,   59,   59,   25,   74,
  117,   93,   77,   87,   54,   49,   42,   78,
  119,   77,   92,   80,   57,   44,   53,  133,
   87,   87,   73,   64,   54,   66,   94,   63,

   48,   34,    7,   45,  -22,   -9,  -10,   -5,
    3,   65,   39,   35,   54,  -22,   10,  -28,
  -10,   10,   -9,   31,   15,  -37,  -29,  -57,
   40,   51,   32,   60,   64,   22,   61,   44,
  -11,   57,   31,   62,   40,   34,   26,   27,
   17,  -40,   33,   11,   23,   15,   -9,   10,
   19,   -7,  -49,  -16,  -21,  -41,  -39,  -41,
  -26,  -13,  -13,  -66,   15,  -13,    4,    8,

  -36,  -32,  -29,  -16,    1,    9,   -3,   -6,
  -17,  -17,   -5,  -21,   -1,   15,   18,   19,
   -7,  -19,  -23,   -1,   -8,  -10,  -16,   11,
  -13,    6,    8,   24,   32,   40,   23,   45,
    4,  -22,   35,   97,  101,   65,   61,   61,
  -15,  -23,   19,   61,   77,   59,    7,    8,
  -49,  -50,    4,   76,   53,   10,  -48,  -75,
  -67, -121,  -68,   40,  -59,    4,  -97, -116,
        };
    }
}
