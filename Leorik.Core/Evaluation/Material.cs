using System.Runtime.CompilerServices;

namespace Leorik.Core
{
    public struct Material
    {
        public short Base;
        public short Endgame;

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void AddScore(int pieceIndex, int squareIndex)
        {
            int tableIndex = (pieceIndex << 6) | squareIndex;
            Base += MidgameTables[tableIndex];
            Endgame += EndgameTables[tableIndex];
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void SubtractScore(int pieceIndex, int squareIndex)
        {
            int tableIndex = (pieceIndex << 6) | squareIndex;
            Base -= MidgameTables[tableIndex];
            Endgame -= EndgameTables[tableIndex];
        }

        public static readonly short[] MidgameTables = new short[6 * 64]{
  100,  100,  100,  100,  100,  100,  100,  100,
  152,  194,  130,  163,  151,  185,  116,   71,
   74,   72,  107,  108,  144,  148,  100,   75,
   59,   74,   78,   95,   97,   90,   87,   65,
   46,   52,   64,   79,   85,   77,   74,   57,
   42,   42,   57,   49,   61,   68,   85,   63,
   37,   49,   51,   49,   54,   97,   93,   62,
  100,  100,  100,  100,  100,  100,  100,  100,

  150,  242,  258,  265,  303,  232,  268,  197,
  242,  263,  381,  333,  325,  367,  296,  286,
  275,  374,  359,  386,  408,  421,  391,  342,
  304,  341,  342,  380,  364,  396,  345,  339,
  309,  322,  338,  336,  351,  346,  340,  314,
  299,  314,  336,  333,  343,  342,  349,  307,
  287,  257,  311,  319,  322,  337,  298,  311,
  228,  301,  258,  280,  302,  295,  305,  276,

  297,  315,  264,  260,  294,  279,  302,  296,
  317,  362,  336,  314,  361,  372,  356,  306,
  339,  376,  390,  391,  378,  396,  383,  354,
  349,  364,  375,  406,  393,  390,  366,  352,
  343,  372,  370,  378,  391,  369,  362,  350,
  351,  368,  368,  371,  369,  383,  372,  360,
  347,  369,  368,  356,  366,  372,  387,  351,
  302,  345,  343,  333,  340,  345,  303,  321,

  484,  507,  477,  521,  517,  488,  487,  487,
  484,  485,  513,  521,  533,  541,  490,  509,
  448,  469,  482,  485,  473,  507,  520,  477,
  423,  437,  455,  481,  474,  485,  460,  447,
  404,  417,  434,  440,  449,  445,  471,  429,
  397,  421,  431,  425,  448,  448,  455,  422,
  394,  430,  422,  434,  445,  455,  444,  380,
  421,  430,  444,  452,  456,  441,  421,  424,

  861,  897,  923,  902,  952,  940,  920,  928,
  893,  868,  905,  919,  911,  958,  928,  951,
  902,  902,  923,  923,  946,  975,  960,  971,
  879,  887,  901,  900,  914,  933,  916,  914,
  904,  885,  904,  902,  909,  914,  917,  914,
  891,  917,  902,  910,  907,  914,  928,  914,
  876,  900,  926,  913,  920,  928,  910,  910,
  906,  892,  902,  923,  894,  887,  889,  865,

  -42,    1,   -1,   -6,  -14,   -7,    8,   -2,
    4,   24,   16,   30,   12,   13,    3,  -10,
   12,   28,   35,    9,   17,   42,   50,   -5,
   -1,    5,   11,   -3,  -11,  -11,    1,  -42,
  -25,   13,  -14,  -64,  -66,  -39,  -47,  -64,
   -3,   17,   -7,  -37,  -47,  -36,    1,  -14,
   20,   37,    4,  -56,  -33,   -1,   42,   50,
   13,   72,   40,  -46,   26,  -14,   60,   55,
    };

        public static short[] EndgameTables = new short[6 * 64]{
    0,    0,    0,    0,    0,    0,    0,    0,
   33,  -12,   58,    9,   23,  -32,   53,  114,
   65,   74,   26,   13,  -41,  -48,   20,   45,
   31,   10,    6,  -19,  -21,  -14,  -11,   10,
   28,   24,   11,   -3,   -9,   -7,  -10,    6,
   27,   32,   18,   40,   26,    9,  -27,   -4,
   44,   25,   41,   45,   43,  -20,  -33,   -3,
    0,    0,    0,    0,    0,    0,    0,    0,

   66,  -13,    4,  -22,  -46,    8,  -41,  -15,
    6,    3, -136,  -59,  -59, -119,  -45,  -57,
  -30, -123,  -79, -109, -148, -157, -140, -106,
  -48,  -70,  -50,  -94,  -75, -120,  -69,  -85,
  -54,  -56,  -52,  -42,  -65,  -61,  -64,  -59,
  -52,  -46,  -70,  -49,  -63,  -74,  -98,  -60,
  -49,    1,  -51,  -54,  -54,  -82,  -45,  -86,
   12,  -88,   -4,  -21,  -53,  -41,  -88,  -50,

  -11,  -36,   21,   32,   -4,   12,  -17,  -19,
  -30,  -78,  -41,  -29,  -73,  -90,  -69,  -23,
  -52,  -95, -106, -107,  -93, -109,  -99,  -66,
  -66,  -71,  -81, -115,  -97,  -99,  -81,  -66,
  -62,  -86,  -70,  -72, -101,  -76,  -83,  -67,
  -72,  -81,  -73,  -76,  -70,  -99,  -92,  -85,
  -70, -101,  -89,  -71,  -79,  -96, -120,  -89,
  -27,  -62,  -82,  -51,  -62,  -78,  -15,  -41,

   32,    3,   47,   -8,   -2,   24,   22,   24,
   28,   30,   -3,  -13,  -40,  -44,   20,   -5,
   65,   44,   28,   25,   35,  -11,  -25,   21,
   93,   77,   64,   25,   33,   19,   38,   62,
  113,  102,   84,   74,   58,   57,   23,   73,
  115,   91,   75,   86,   52,   48,   40,   76,
  117,   75,   90,   79,   55,   42,   52,  131,
   85,   85,   71,   62,   52,   65,   91,   63,

   48,   33,    7,   45,  -21,   -9,  -10,   -6,
    3,   68,   40,   35,   53,  -21,   11,  -28,
  -10,   11,   -9,   31,   16,  -37,  -28,  -58,
   42,   51,   32,   60,   64,   21,   60,   44,
  -11,   58,   32,   63,   40,   33,   26,   26,
   18,  -40,   33,   10,   24,   15,  -10,    9,
   19,   -7,  -49,  -16,  -21,  -42,  -40,  -41,
  -25,  -12,  -14,  -67,   15,  -13,    3,    8,

  -35,  -33,  -29,  -16,    1,    9,   -2,   -6,
  -17,  -17,   -5,  -21,   -1,   16,   19,   19,
   -7,  -19,  -23,   -2,   -8,  -10,  -15,   12,
  -13,    7,    8,   23,   32,   39,   23,   46,
    4,  -22,   35,   97,  100,   67,   63,   61,
  -16,  -22,   19,   61,   77,   59,    7,    7,
  -49,  -51,    3,   75,   52,    8,  -51,  -77,
  -68, -122,  -68,   40,  -59,    3,  -97, -116,

        };
    }
}
